<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <style>
        body {
            padding-left: 5px;
            padding-right: 5px;
            padding-top: 5px;
        }
        #badge {
            padding-left: 15px;
        }
        table {
            padding-left: 15px;
            padding-right: 15px;
        }
    </style>
    <title>Document</title>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-light">
        <form class="form-group" method="post" action="/">
            <div class="input-group">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Google Play Store</label>
                </div>
                <select class="custom-select" id="inputGroupSelect04" name='google_category'>
                    <option selected>Select category...</option>
                    <% Object.entries(google_category).forEach(function(key, value) { %>
                    <option><%- key[1] %></option>
                    <% }) %>
                </select>

                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Get List</button>
                </div>
            </div>
        </form>
    </nav>

    <nav class="navbar navbar-expand-lg navbar-dark bg-light">
        <form class="form-group" method="post" action="/">
            <div class="input-group">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Apple App Store</label>
                </div>
                <select class="custom-select" id="inputGroupSelect04" name='appstore_category'>
                    <option selected>Select category...</option>
                    <% Object.entries(appstore_category).forEach(function(key, value) { %>
                    <option><%- key[0] %></option>
                    <% }) %>
                </select>

                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Get List</button>
                </div>

            </div>
        </form>
    </nav>

    <div class="alert alert-light" role="alert" id="badge">
        <button type="button" id="get-csv" class="btn btn-success">Download</button>
        Total Results: <%- apps_results.length %>
    </div>

    <table id="table-csv" class="table table-striped">
        <thead class="thead-dark">
            <tr>
            <th scope="col">App Name</th>
            <th scope="col">Developer</th>
            <th scope="col">Developer Website</th>
            <th scope="col">Developer Email</th>
            <th scope="col">Updated</th>
            <th scope="col">Store URL</th>
            </tr>
        </thead>
        <tbody>
            <% apps_results.forEach(element => { %>
            <tr>
            <td><%- element['title'] %></td>
            <td><%- element['developer'] %></td>
            <td><%- element['developerWebsite'] %></td>
            <td><%- element['developerEmail'] %></td>
            <td><%- element['updated'] %></td>
            <td><a target="_blank" href="<%- element['applink'] %>"><%- element['applink'] %></a></td>
            </tr>
            <% }) %>
        </tbody>
    </table>

    <script>
        function export_table_to_csv() {
            // Generate our CSV string from out HTML Table
            var csv = tableToCSV( document.querySelector( "#table-csv" ) );
            // Create a CSV Blob
            var blob = new Blob( [ csv ], { type: "text/csv"} );

            // Determine which approach to take for the download
            if ( navigator.msSaveOrOpenBlob ) {
                // Works for Internet Explorer and Microsoft Edge
                navigator.msSaveOrOpenBlob( blob, "output.csv" );

            } else {
                // Attempt to use an alternative method
                var anchor = document.body.appendChild(
                    document.createElement( "a" )
                );
                // If the [download] attribute is supported, try to use it
                if ( "download" in anchor ) {
                    anchor.download = "output.csv";
                    anchor.href = URL.createObjectURL( blob );
                    anchor.click();
                }

            }

            function tableToCSV( table ) {
            // We'll be co-opting `slice` to create arrays
                var slice = Array.prototype.slice;

                return slice.call( table.rows ).map(function ( row ) {
                    return slice.call( row.cells ).map(function ( cell ) {
                        return '"t"'.replace( "t", cell.textContent );
                    }).join( "," );
                }).join( "\r\n" );

            }

            };

        document.querySelector("#get-csv").addEventListener("click", function () {
            export_table_to_csv();
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
</body>
</html>